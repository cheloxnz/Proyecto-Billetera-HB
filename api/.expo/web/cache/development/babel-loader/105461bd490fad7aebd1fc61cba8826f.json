{"ast":null,"code":"var express = require(\"express\");\n\nvar bodyParser = require(\"body-parser\");\n\nvar morgan = require(\"morgan\");\n\nvar passport = require(\"passport\");\n\nvar LocalStrategy = require(\"passport-local\").Strategy;\n\nvar routes = require(\"./routes/index\");\n\nvar bcrypt = require(\"bcryptjs\");\n\nvar _require = require(\"./db\"),\n    User = _require.User;\n\nvar nodemailer = require(\"nodemailer\");\n\nvar server = express();\npassport.use(new LocalStrategy({\n  usernameField: \"email\",\n  passwordField: \"password\",\n  passReqToCallback: true\n}, function (req, email, password, done) {\n  User.findOne({\n    where: {\n      email: email\n    }\n  }).then(function (user) {\n    if (!user) {\n      return done(null, false, {\n        message: \"User \" + email + \" not found\"\n      });\n    } else if (!bcrypt.compareSync(password, user.password)) {\n      return done(null, false, {\n        message: \"Password incorrect\"\n      });\n    } else return done(null, user.dataValues);\n  });\n}));\npassport.serializeUser(function (user, done) {\n  return done(null, user.id);\n});\npassport.deserializeUser(function (id, done) {\n  User.findByPk(id).then(function (user) {\n    return done(null, user.get());\n  }).catch(function (err) {\n    return done(err, false);\n  });\n});\nserver.name = \"API\";\nserver.use(bodyParser.urlencoded({\n  extended: true,\n  limit: \"50mb\"\n}));\nserver.use(bodyParser.json({\n  limit: \"50mb\"\n}));\nserver.use(morgan(\"dev\"));\nserver.use(passport.initialize());\nserver.use(passport.session());\nserver.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"http://localhost:19006\");\n  res.header(\"Access-Control-Allow-Credentials\", \"true\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, DELETE, PUT, OPTIONS\");\n  next();\n});\nserver.use(\"/\", routes);\nserver.use(function (err, req, res, next) {\n  var status = err.status || 500;\n  var message = err.message || err;\n  console.error(err);\n  res.status(status).send(message);\n});\nserver.use(function (err, req, res, next) {\n  var status = err.status || 500;\n  var message = err.message || err;\n  res.status(status).send(message);\n});\nserver.post(\"/send-email\", function (req, res) {\n  var email = req.body.email;\n  User.findOne({\n    where: {\n      email: email\n    }\n  }).then(function (data) {\n    var code = data.generatedCode;\n    var transporter = nodemailer.createTransport({\n      service: \"gmail\",\n      auth: {\n        user: \"henrybank03@gmail.com\",\n        pass: \"!HenryBank02\"\n      }\n    });\n    var mailOptions = {\n      from: \"Remitente\",\n      to: email,\n      subject: \"EnvÃ­ado desde mi Henry Bank\",\n      text: \"HOLA \" + code\n    };\n    transporter.sendMail(mailOptions, function (error, response) {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n      } else {\n        res.sendStatus(200);\n      }\n    });\n  });\n});\nmodule.exports = server;","map":{"version":3,"sources":["/home/matias/Documentos/Henry/Proyecto-Henry-Bank/api/src/app.js"],"names":["express","require","bodyParser","morgan","passport","LocalStrategy","Strategy","routes","bcrypt","User","nodemailer","server","use","usernameField","passwordField","passReqToCallback","req","email","password","done","findOne","where","then","user","message","compareSync","dataValues","serializeUser","id","deserializeUser","findByPk","get","catch","err","name","urlencoded","extended","limit","json","initialize","session","res","next","header","status","console","error","send","post","body","data","code","generatedCode","transporter","createTransport","service","auth","pass","mailOptions","from","to","subject","text","sendMail","response","log","sendStatus","module","exports"],"mappings":"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","sourcesContent":["const express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst morgan = require(\"morgan\");\nconst passport = require(\"passport\");\nconst LocalStrategy = require(\"passport-local\").Strategy;\nconst routes = require(\"./routes/index\");\nconst bcrypt = require(\"bcryptjs\");\nconst { User } = require(\"./db\");\nconst nodemailer = require(\"nodemailer\");\n\n\nconst server = express();\n\n//-----------------------------------------------\n//            LOCAL STRATEGY                    |\n//-----------------------------------------------\npassport.use(\n  new LocalStrategy(\n    {\n      usernameField: \"email\",\n      passwordField: \"password\",\n      passReqToCallback: true,\n    },\n    (req, email, password, done) => {\n      User.findOne({ where: { email } }).then((user) => {\n        if (!user) {\n          return done(null, false, { message: `User ${email} not found` });\n        } else if (!bcrypt.compareSync(password, user.password)) {\n          return done(null, false, { message: \"Password incorrect\" });\n        } else return done(null, user.dataValues);\n      });\n    }\n  )\n);\n\n\n//-------------------------------------\n//        SERIALIZAR USUARIO          |\n//-------------------------------------\npassport.serializeUser((user, done) => {\n  return done(null, user.id);\n});\n\n//-------------------------------------\n//        DESERIALIZAR USUARIO        |\n//-------------------------------------\npassport.deserializeUser((id, done) => {\n  User.findByPk(id)\n    .then((user) => {\n      return done(null, user.get());\n    })\n    .catch((err) => done(err, false));\n});\n\nserver.name = \"API\";\nserver.use(bodyParser.urlencoded({ extended: true, limit: \"50mb\" }));\nserver.use(bodyParser.json({ limit: \"50mb\" }));\nserver.use(morgan(\"dev\"));\n\n//-----------------------------------------------\n//           INICIALIZAR PASSPORT Y SESSION     |\n//-----------------------------------------------\nserver.use(passport.initialize());\nserver.use(passport.session());\n\n\nserver.use((req, res, next) => {\n  res.header(\"Access-Control-Allow-Origin\", \"http://localhost:19006\"); // update to match the domain you will make the request from\n  res.header(\"Access-Control-Allow-Credentials\", \"true\");\n  res.header(\n    \"Access-Control-Allow-Headers\",\n    \"Origin, X-Requested-With, Content-Type, Accept\"\n  );\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, DELETE, PUT, OPTIONS\");\n  next();\n});\n\nserver.use(\"/\", routes);\n\nserver.use((err, req, res, next) => {\n  // eslint-disable-line no-unused-vars\n  const status = err.status || 500;\n  const message = err.message || err;\n  console.error(err);\n  res.status(status).send(message);\n});\n\n// Error catching endware.\nserver.use((err, req, res, next) => {\n  // eslint-disable-line no-unused-vars\n  const status = err.status || 500;\n  const message = err.message || err;\n  /* console.error(err); */\n  res.status(status).send(message);\n});\n\n//-----------------------------------------------\n//           SEND EMAIL \t\t\t\t\t              |\n//-----------------------------------------------\n\nserver.post(\"/send-email\", (req, res) => {\n  const email = req.body.email;\n  User.findOne({\n    where: {\n      email: email\n    }\n  }).then(data => {\n    const code = data.generatedCode\n    const transporter = nodemailer.createTransport({\n      service: \"gmail\",\n      auth: {\n        user: \"henrybank03@gmail.com\",\n        pass: \"!HenryBank02\",\n      },\n    });\n\n    const mailOptions = {\n      from: \"Remitente\",\n      to: email,\n      subject: \"EnvÃ­ado desde mi Henry Bank\",\n      text: `HOLA ${code}`\n    };\n\n    transporter.sendMail(mailOptions, function (error, response) {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n      } else {\n        res.sendStatus(200);\n      }\n    });\n  });\n})\n\nmodule.exports = server;\n"]},"metadata":{},"sourceType":"script"}